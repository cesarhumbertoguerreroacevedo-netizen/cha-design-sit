'use client';import * as React from 'react';import { createContext, useContext } from 'react';type Ctx={open:boolean;setOpen:(v:boolean)=>void};const SheetCtx= createContext<Ctx|null>(null);export function Sheet({open,onOpenChange,children}:{open:boolean;onOpenChange:(v:boolean)=>void;children:React.ReactNode}){return <SheetCtx.Provider value={{open,setOpen:onOpenChange}}>{children}</SheetCtx.Provider>};export function SheetTrigger({asChild,children}:{asChild?:boolean;children:React.ReactElement}){const ctx=useContext(SheetCtx)!;return asChild&&React.isValidElement(children)?React.cloneElement(children,{onClick:(e:any)=>{children.props.onClick?.(e);ctx.setOpen(true);}}):<button onClick={()=>ctx.setOpen(true)}>{children}</button>};export function SheetContent({children}:{children:React.ReactNode}){const ctx=useContext(SheetCtx)!;return(<>{ctx.open&&<div className="fixed inset-0 bg-black/40 z-40" onClick={()=>ctx.setOpen(false)}/>}<div className={"fixed top-0 right-0 h-full w-[420px] max-w-[90vw] bg-[#1a1410] text-[#F2EAE3] border-l border-white/10 z-50 "+(ctx.open?'':'translate-x-full transition-transform')}>{children}</div></>)};export function SheetHeader({children}:{children:React.ReactNode}){return <div className="p-4 border-b border-white/10">{children}</div>};export function SheetTitle({children}:{children:React.ReactNode}){return <h3 className="font-semibold">{children}</h3>};